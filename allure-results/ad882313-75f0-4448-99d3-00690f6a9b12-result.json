{"uuid":"ad882313-75f0-4448-99d3-00690f6a9b12","historyId":"f827a460b5dfb7aa7a408e0aac9ca270","status":"failed","statusDetails":{"message":"The expression evaluated to a falsy value:\n\n  it(\"should show the opening hours of current day\", async() =>{\n  \n      const day = await $(\"//div[@class = 'text-day__item--text current-date']\").getText();\n      const morningStartTime = await $(\"//div[@class = 'text-day-hour__item current-date first ng-star-inserted']/div[@class= 'text-day-hour__text-startTime']\").getText();\n      const morningEndTime = await $(\"//div[@class = 'text-day-hour__item current-date first ng-star-inserted']/div[@class= 'text-day-hour__text-endTime']\").getText();\n      const afternoonStartTime = await $(\"//div[@class = 'text-day-hour__item current-date ng-star-inserted']/div[@class= 'text-day-hour__text-startTime']\").getText();\n      const afternoonEndTime = await $(\"//div[@class = 'text-day-hour__item current-date ng-star-inserted']/div[@class= 'text-day-hour__text-endTime']\").getText();\n      \n      const morningTime = {\"day\": day, \"startTime\": morningStartTime, \"endTime\": morningEndTime};\n      const EveningTime = {\"day\": day, \"startTime\": afternoonStartTime, \"endTime\": afternoonEndTime};\n  \n      console.log(\"morningTime\")\n      console.log(morningTime)\n      console.log(\"DOCTOR_DETAIL.openingTimes\")\n      console.log(DOCTOR_DETAIL.openingTimes)\n      console.log(\"includes\")\n      console.log(DOCTOR_DETAIL.openingTimes.find((details) => { (details.day === morningTime.day) && (details.endTime === \"18:00 Uhr\") && (details.startTime === morningTime.startTime) }))\n      const foundObject = DOCTOR_DETAIL.openingTimes.find((details) => { (details.day === morningTime.day) && (details.endTime === morningTime.endTime) && (details.startTime === morningTime.startTime) });\n      \n      assert.ok(foundObject);\n      // expect(DOCTOR_DETAIL.openingTimes).toContainEqual(expect.objectContaining(morningTime));\n  \n      // await expect(DOCTOR_DETAIL.openingTimes).t .toHaveText(morningStartTime);\n  \n      // DOCTOR_DETAIL.openingTimes.includes(morningTime);\n      // DOCTOR_DETAIL.openingTimes.includes(EveningTime);\n  \n  \n      \n  \n      // const currentDate = new Date();\n      // const dayName = currentDate.toLocaleDateString('de-DE', { weekday: 'long' }).substring(0,2)+ '.';\n      \n      // const openingTimes = DOCTOR_DETAIL.openingTimes\n      \n      // const filteredTimes = openingTimes.filter(time => time.day === dayName);\n      // console.log(`Opening times for ${dayName}:`, filteredTimes);\n  \n  \n      // const uniqueDays = [...new Set(openingTimes.map(time => time.day))];\n  \n      // // Loop through each unique day and filter opening times\n      // uniqueDays.forEach(day => {\n      //     const filteredTimes = openingTimes\n      //         .filter(time => time.day === day)\n      //         .map(({ day, startTime, endTime }) => ({ day, startTime, endTime }));\n  \n      // console.log(`Opening times for this time ${day}:`, filteredTimes);\n  \n  })\n      \n      actual expected\n      \n      undefinedtrue\n      ","trace":"AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  it(\"should show the opening hours of current day\", async() =>{\n  \n      const day = await $(\"//div[@class = 'text-day__item--text current-date']\").getText();\n      const morningStartTime = await $(\"//div[@class = 'text-day-hour__item current-date first ng-star-inserted']/div[@class= 'text-day-hour__text-startTime']\").getText();\n      const morningEndTime = await $(\"//div[@class = 'text-day-hour__item current-date first ng-star-inserted']/div[@class= 'text-day-hour__text-endTime']\").getText();\n      const afternoonStartTime = await $(\"//div[@class = 'text-day-hour__item current-date ng-star-inserted']/div[@class= 'text-day-hour__text-startTime']\").getText();\n      const afternoonEndTime = await $(\"//div[@class = 'text-day-hour__item current-date ng-star-inserted']/div[@class= 'text-day-hour__text-endTime']\").getText();\n      \n      const morningTime = {\"day\": day, \"startTime\": morningStartTime, \"endTime\": morningEndTime};\n      const EveningTime = {\"day\": day, \"startTime\": afternoonStartTime, \"endTime\": afternoonEndTime};\n  \n      console.log(\"morningTime\")\n      console.log(morningTime)\n      console.log(\"DOCTOR_DETAIL.openingTimes\")\n      console.log(DOCTOR_DETAIL.openingTimes)\n      console.log(\"includes\")\n      console.log(DOCTOR_DETAIL.openingTimes.find((details) => { (details.day === morningTime.day) && (details.endTime === \"18:00 Uhr\") && (details.startTime === morningTime.startTime) }))\n      const foundObject = DOCTOR_DETAIL.openingTimes.find((details) => { (details.day === morningTime.day) && (details.endTime === morningTime.endTime) && (details.startTime === morningTime.startTime) });\n      \n      assert.ok(foundObject);\n      // expect(DOCTOR_DETAIL.openingTimes).toContainEqual(expect.objectContaining(morningTime));\n  \n      // await expect(DOCTOR_DETAIL.openingTimes).t .toHaveText(morningStartTime);\n  \n      // DOCTOR_DETAIL.openingTimes.includes(morningTime);\n      // DOCTOR_DETAIL.openingTimes.includes(EveningTime);\n  \n  \n      \n  \n      // const currentDate = new Date();\n      // const dayName = currentDate.toLocaleDateString('de-DE', { weekday: 'long' }).substring(0,2)+ '.';\n      \n      // const openingTimes = DOCTOR_DETAIL.openingTimes\n      \n      // const filteredTimes = openingTimes.filter(time => time.day === dayName);\n      // console.log(`Opening times for ${dayName}:`, filteredTimes);\n  \n  \n      // const uniqueDays = [...new Set(openingTimes.map(time => time.day))];\n  \n      // // Loop through each unique day and filter opening times\n      // uniqueDays.forEach(day => {\n      //     const filteredTimes = openingTimes\n      //         .filter(time => time.day === day)\n      //         .map(({ day, startTime, endTime }) => ({ day, startTime, endTime }));\n  \n      // console.log(`Opening times for this time ${day}:`, filteredTimes);\n  \n  })\n\n    at Context.<anonymous> (file:///D:/ClickDoc/test/specs/searchPage.ts:49:16)"},"stage":"finished","steps":[{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"9dea3557-1165-48a9-834a-82d603ec43b3-attachment.txt"},{"name":"Response","type":"text/plain","source":"53444c00-1b41-4478-b446-2149b57125e6-attachment.txt"}],"parameters":[],"start":1709048646198,"name":"POST /session/:sessionId/element","stop":1709048646212},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"application/json","source":"983603f4-ad0a-4343-8a6e-523527d36fd5-attachment.json"}],"parameters":[],"start":1709048646214,"name":"GET /session/:sessionId/element/72169968FC430C62FE27DC5F5F05E3DA_element_83/text","stop":1709048646223},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"1cdfc245-c427-4157-8f3b-7eea8a65a178-attachment.txt"},{"name":"Response","type":"text/plain","source":"c0ef10ed-40b2-406f-84a6-cb99130eb513-attachment.txt"}],"parameters":[],"start":1709048646224,"name":"POST /session/:sessionId/element","stop":1709048646237},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"application/json","source":"6f212ab3-1497-490d-a082-ed55d7c03b05-attachment.json"}],"parameters":[],"start":1709048646239,"name":"GET /session/:sessionId/element/72169968FC430C62FE27DC5F5F05E3DA_element_84/text","stop":1709048646249},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"d2333c4e-7596-4073-b4d3-f9ec4545bda8-attachment.txt"},{"name":"Response","type":"text/plain","source":"2497ee96-a3e5-4435-9fe8-f17947676379-attachment.txt"}],"parameters":[],"start":1709048646250,"name":"POST /session/:sessionId/element","stop":1709048646263},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"application/json","source":"bcc96a9d-6b87-4746-b00d-7fc268034db7-attachment.json"}],"parameters":[],"start":1709048646266,"name":"GET /session/:sessionId/element/72169968FC430C62FE27DC5F5F05E3DA_element_85/text","stop":1709048646274},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"f3a4a2cb-379c-4ca6-b0fb-89b862bd16f0-attachment.txt"},{"name":"Response","type":"text/plain","source":"27f7cbca-a36d-4177-ae96-42c4baa81402-attachment.txt"}],"parameters":[],"start":1709048646274,"name":"POST /session/:sessionId/element","stop":1709048646287},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"application/json","source":"77916ea6-807e-4178-9492-036e5e3f9b5e-attachment.json"}],"parameters":[],"start":1709048646288,"name":"GET /session/:sessionId/element/72169968FC430C62FE27DC5F5F05E3DA_element_86/text","stop":1709048646297},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"5b26406a-b581-428e-be5e-90128221002d-attachment.txt"},{"name":"Response","type":"text/plain","source":"a64ac444-055d-47cb-a838-2a38ce75bdac-attachment.txt"}],"parameters":[],"start":1709048646297,"name":"POST /session/:sessionId/element","stop":1709048646309},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"application/json","source":"f1368f34-6286-4884-887e-465870a75d5e-attachment.json"}],"parameters":[],"start":1709048646311,"name":"GET /session/:sessionId/element/72169968FC430C62FE27DC5F5F05E3DA_element_87/text","stop":1709048646320},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Screenshot","type":"image/png","source":"f5f4d722-8e43-40aa-b8cc-01edeec64f03-attachment.png"},{"name":"Response","type":"application/json","source":"0c90eac0-f571-4e64-abd7-acbf0f2f3321-attachment.json"}],"parameters":[],"start":1709048646335,"name":"GET /session/:sessionId/screenshot","stop":1709048646492}],"attachments":[],"parameters":[{"name":"browser","value":"chrome-121.0.6167.189"}],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"wdio"},{"name":"package","value":"D:.ClickDoc.test.specs.searchPage.ts"},{"name":"thread","value":"0-0"},{"name":"suite","value":"search here"},{"name":"feature","value":"search here"}],"links":[],"start":1709048646197,"name":"should show the opening hours of current day","testCaseId":"f827a460b5dfb7aa7a408e0aac9ca270","stop":1709048646496}